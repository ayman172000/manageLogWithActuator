import { Directive, ElementRef, HostListener } from '@angular/core';

@Directive({
  selector: '[appDraggable]'
})
export class DraggableDirective {
  private isDragging = false;
  private startX = 0;
  private startY = 0;
  private initialX = 0;
  private initialY = 0;

  constructor(private el: ElementRef) {
    this.el.nativeElement.style.position = 'absolute';
  }

  @HostListener('mousedown', ['$event'])
  onMouseDown(event: MouseEvent): void {
    this.isDragging = true;
    this.startX = event.clientX - this.el.nativeElement.offsetLeft;
    this.startY = event.clientY - this.el.nativeElement.offsetTop;
    document.addEventListener('mousemove', this.onMouseMove);
    document.addEventListener('mouseup', this.onMouseUp);
  }

  @HostListener('document:mouseup')
  onMouseUp(): void {
    this.isDragging = false;
    document.removeEventListener('mousemove', this.onMouseMove);
    document.removeEventListener('mouseup', this.onMouseUp);
  }

  onMouseMove = (event: MouseEvent): void => {
    if (this.isDragging) {
      this.initialX = event.clientX - this.startX;
      this.initialY = event.clientY - this.startY;
      this.el.nativeElement.style.left = `${this.initialX}px`;
      this.el.nativeElement.style.top = `${this.initialY}px`;
    }
  };
}








<nb-window>
  <div appDraggable class="window-header">
    Draggable Window Header
  </div>
  <div class="window-content">
    <!-- Your window content goes here -->
  </div>
</nb-window>




.window-header {
  cursor: move;
  /* Other styles for your window header */
}

.window-content {
  /* Styles for your window content */
}